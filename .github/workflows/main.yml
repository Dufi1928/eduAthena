name: CI/CD Pipeline for Eduathena

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20  # Spécifier la version exacte de Node.js

      - name: Install Dependencies
        run: npm install

      - name: Build Docker Image
        run: docker build . -t dufi1928/eduathena:latest

      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push dufi1928/eduathena:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ivan/deployments/"
          port: 2222

      - name: Setup SSH for Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 2222
          script: |
            # Aller dans le répertoire de déploiement
            cd /home/ivan/deployments

            # Connexion au registre Docker (Docker Hub par défaut)
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Récupérer les dernières images Docker
            docker-compose pull

            # Déployer en utilisant Docker Compose
            docker-compose up -d

            # Vérifier les conteneurs en cours d'exécution
            docker ps
  
